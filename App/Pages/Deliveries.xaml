<Page x:Class="Courier_Data_Control_App.Pages.Deliveries"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:local="clr-namespace:Courier_Data_Control_App.Validations"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      TextElement.Foreground="{DynamicResource MaterialDesign.Brush.Primary.Dark.Foreground}"
      Background="{DynamicResource MaterialDesign.Brush.Background}"
      TextElement.FontWeight="Regular"
      TextElement.FontSize="14"
      FontFamily="{materialDesign:RobotoFont}">

    <Grid>
        <!-- Start: Add new delivery form -->
        <materialDesign:ColorZone materialDesign:ElevationAssist.Elevation="Dp2" 
                                  ClipToBounds="False" CornerRadius="10" Mode="Standard" Height="96">

            <StackPanel VerticalAlignment="Top" HorizontalAlignment="Stretch" Orientation="Horizontal" 
                        Margin="25, 0">
                <!-- Start: Fields to add new deliveries -->
                <Button ToolTip="Agregar nueva entrega" Margin="5, 5" materialDesign:ElevationAssist.Elevation="Dp4"
                        Command="{Binding AddDeliveryCommand}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionSecondaryDarkButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Text, ElementName=TextBoxAddress}" Value="">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>

                                <!-- Disable button if TextBoxPhoneNumber is empty -->
                                <DataTrigger Binding="{Binding Path=Text, ElementName=TextBoxPhoneNumber}" Value="">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>

                                <!-- Disable button if ComboBoxDriver has no selected item -->
                                <DataTrigger Binding="{Binding Path=SelectedItem, ElementName=ComboboxDriver}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                
                                <!-- Disable button if any validation errors -->
                                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=TextBoxAddress}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                
                                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=TextBoxPhoneNumber}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                
                                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=ComboboxDriver}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                
                            </Style.Triggers>
                        </Style>
                    </Button.Style>

                    <materialDesign:PackIcon Kind="Plus" Width="30" Height="30"/>
                </Button>

                <ComboBox x:Name="ComboboxClient" materialDesign:HintAssist.Hint="Cliente" 
                          materialDesign:TextFieldAssist.HasClearButton="True" Style="{StaticResource MaterialDesignOutlinedComboBox}"
                          ItemsSource="{Binding Clients}" DisplayMemberPath="Name" SelectedValuePath="Name"
                          SelectedValue="{Binding CurrentDelivery.CustomerName, Mode=TwoWay, 
                                            UpdateSourceTrigger=PropertyChanged}" 
                          IsEditable="True" Margin="20, 20" HorizontalContentAlignment="Left" Width="150">
                </ComboBox>

                <TextBox x:Name="TextBoxPhoneNumber" materialDesign:HintAssist.Hint="Teléfono" 
                         materialDesign:TextFieldAssist.HasClearButton="True"
                         Style="{StaticResource MaterialDesignOutlinedTextBox}" Margin="20, 20"
                         HorizontalContentAlignment="Left" Width="150">
                        <TextBox.Text>
                        <Binding Path="CurrentDelivery.PhoneNumber" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <local:PhoneNumberValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                </TextBox>

                <TextBox x:Name="TextBoxAddress" materialDesign:HintAssist.Hint="Dirección" 
                         materialDesign:TextFieldAssist.HasClearButton="True"
                         Style="{StaticResource MaterialDesignOutlinedTextBox}"
                         Margin="20, 20" HorizontalContentAlignment="Left" Width="150">
                        <TextBox.Text>
                        <Binding Path="CurrentDelivery.Address" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <local:AddressValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                </TextBox>

                <ComboBox materialDesign:HintAssist.Hint="Descripción" materialDesign:TextFieldAssist.HasClearButton="True"
                          Style="{StaticResource MaterialDesignOutlinedComboBox}" ItemsSource="{Binding DeliveryTypes}"
                          Text="{Binding CurrentDelivery.Description}" IsEditable="True"
                          Margin="20, 20" HorizontalContentAlignment="Left" Width="150">
                </ComboBox>

                <ComboBox x:Name="ComboboxDriver" materialDesign:HintAssist.Hint="Mensajero" 
                          materialDesign:TextFieldAssist.HasClearButton="True"
                          Style="{StaticResource MaterialDesignOutlinedComboBox}" IsTextSearchEnabled="True"
                          ItemsSource="{Binding Drivers}" DisplayMemberPath="FullName"
                          Margin="20, 20" HorizontalContentAlignment="Left" Width="150">
                        <ComboBox.SelectedItem>
                            <Binding Path="CurrentDelivery.Driver" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <local:DriverValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedItem>
                </ComboBox>
                <!-- End: Fields to add new deliveries -->
            </StackPanel>
        </materialDesign:ColorZone>
        <!-- End: Add new delivery form -->

        <!-- Start: List of Deliveries -->
        <FrameworkElement x:Name="DataContextProxy" DataContext="{Binding}" Validation.ErrorTemplate="{x:Null}"/>
        <DataGrid x:Name="DeliveriesDataGrid"
                  AutoGenerateColumns="False" IsReadOnly="True" SelectionMode="Single"
                  EnableRowVirtualization="True"
                  EnableColumnVirtualization="True"
                  ItemsSource="{Binding Deliveries}"
                  RowHeight="50" Margin="5,130,5,80" 
                  CanUserDeleteRows="False" CanUserAddRows="False"
                  AlternationCount="2"
                  RowStyle="{StaticResource MaterialDesignDataGridRow}"
                  AlternatingRowBackground="{StaticResource MaterialDesignLightSeparatorBackground}"
                  Style="{StaticResource MaterialDesignDataGrid}"
                  MouseDoubleClick="DataGrid_MouseDoubleClick">

            <!-- Start: Deliveries Data Grid Columns -->
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.Header>
                        <Border Background="Transparent">
                            <CheckBox IsChecked="{Binding DataContext.IsAllItemsSelected, 
                                            Source={x:Reference DataContextProxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Border>
                    </DataGridCheckBoxColumn.Header>
                    <DataGridCheckBoxColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.HeaderStyle>
                </DataGridCheckBoxColumn>

                <DataGridTextColumn Header="Fecha" Binding="{Binding DateCreated}" 
                                    Width="*" IsReadOnly="True" />

                <DataGridTextColumn Header="Cliente" Binding="{Binding CustomerName, 
                                    UpdateSourceTrigger=PropertyChanged}" Width="*" />

                <DataGridTextColumn Header="Teléfono" Width="*">
                    <DataGridTextColumn.Binding>
                        <Binding Path="PhoneNumber" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:PhoneNumberValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Dirección"  Width="*">
                    <DataGridTextColumn.Binding>
                        <Binding Path="Address" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:AddressValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Descripción" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Description}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding DataContext.DeliveryTypes, 
                                      RelativeSource={RelativeSource AncestorType=Page}}"
                                      SelectedItem="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="True" IsTextSearchEnabled="True"
                                      Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Mensajero" Width="*" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Driver.FullName}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox  ItemsSource="{Binding DataContext.Drivers, RelativeSource={RelativeSource AncestorType=Page}}"
                                       DisplayMemberPath="FullName"
                                       SelectedItem="{Binding Driver, UpdateSourceTrigger=PropertyChanged}"
                                       IsTextSearchEnabled="True"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Estado" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" 
                                          IsChecked="{Binding Status, UpdateSourceTrigger=PropertyChanged}"
                                          IsHitTestVisible="False">
                                <materialDesign:PackIcon Kind="ProgressClock" RenderTransformOrigin=".5,.5">
                                    <materialDesign:PackIcon.RenderTransform>
                                        <RotateTransform Angle="45" />
                                    </materialDesign:PackIcon.RenderTransform>
                                </materialDesign:PackIcon>
                                <materialDesign:ToggleButtonAssist.OnContent>
                                    <materialDesign:PackIcon Kind="PackageVariantClosedCheck" />
                                </materialDesign:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" 
                                          IsChecked="{Binding Status, UpdateSourceTrigger=PropertyChanged}">
                                <materialDesign:PackIcon Kind="ProgressClock" RenderTransformOrigin=".5,.5">
                                    <materialDesign:PackIcon.RenderTransform>
                                        <RotateTransform Angle="45" />
                                    </materialDesign:PackIcon.RenderTransform>
                                </materialDesign:PackIcon>
                                <materialDesign:ToggleButtonAssist.OnContent>
                                    <materialDesign:PackIcon Kind="PackageVariantClosedCheck" />
                                </materialDesign:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <!-- End: Deliveries Data Grid Columns -->
            
        </DataGrid>
        <!-- End: List of Deliveries -->

        <!-- Start: Paging Buttons -->
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,20">
            <!-- Previous Page Button -->
            <Button materialDesign:ElevationAssist.Elevation="Dp2"
                    Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                    Command="{Binding PreviousPageCommand}"
                    IsEnabled="{Binding CanNavigatePrevious}"
                    Margin="5">
                <materialDesign:PackIcon Kind="ArrowLeft" Width="20" Height="20"/>
            </Button>

            <!-- Page Information -->
            <TextBlock Text="{Binding CurrentPage, StringFormat='Page {0} of'}"
               VerticalAlignment="Center"
               Margin="20,0,0,0"/>
            <TextBlock Text="{Binding TotalPages}"
               VerticalAlignment="Center"
               Margin="5,0,20,0"/>

            <!-- Next Page Button -->
            <Button materialDesign:ElevationAssist.Elevation="Dp2"
                    Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                    Command="{Binding NextPageCommand}"
                    IsEnabled="{Binding CanNavigateNext}"
                    Margin="5">
                <materialDesign:PackIcon Kind="ArrowRight" Width="20" Height="20"/>
            </Button>
        </StackPanel>
        <!-- End: Paging Buttons -->

        <Button Style="{StaticResource MaterialDesignFloatingActionSecondaryDarkButton}" ToolTip="Eliminar entregas seleccionadas"
                ToolTipService.Placement="Left"
                Margin="20, 15" materialDesign:ElevationAssist.Elevation="Dp4" Command="{Binding DeleteSelectedDeliveriesCommand}"
                HorizontalAlignment="Right" VerticalAlignment="Bottom">
            <materialDesign:PackIcon Kind="Delete" Width="30" Height="30"/>
        </Button>
    </Grid>

    <!-- Start: Behaviors -->
    <behaviors:Interaction.Triggers>
        <!-- Behavior Editing Deliveries Data Grid -->
        <behaviors:EventTrigger EventName="RowEditEnding" x:Name="DeliveriesDataGridEndingEdit" SourceName="DeliveriesDataGrid">
            <behaviors:InvokeCommandAction Command="{Binding UpdateDeliveryCommand}" PassEventArgsToCommand="True"/>
        </behaviors:EventTrigger>

        <!-- Behavior Selecting client from Combobox -->
        <behaviors:EventTrigger EventName="LostFocus" x:Name="LostFocusClientCombobox" SourceName="ComboboxClient">
            <behaviors:InvokeCommandAction Command="{Binding SelectClientCommand}"/>
        </behaviors:EventTrigger>

    </behaviors:Interaction.Triggers>
    <!-- End: Behaviors -->

</Page>
