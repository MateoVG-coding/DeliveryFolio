<Page x:Class="Courier_Data_Control_App.Deliveries"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:validations="clr-namespace:Courier_Data_Control_App.Validations"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      TextElement.Foreground="{DynamicResource MaterialDesign.Brush.Primary.Dark.Foreground}"
      Background="{DynamicResource MaterialDesign.Brush.Background}"
      TextElement.FontWeight="Regular"
      TextElement.FontSize="14"
      FontFamily="{materialDesign:RobotoFont}">

    <Grid>
        <!--START: Dialog Host to add new delivery -->
        <materialDesign:DialogHost x:Name="DialogHostAddDelivery" DialogTheme="Inherit" DialogMargin="5"
                                   DialogClosing="DialogHostAddDelivery_DialogClosing">

            <materialDesign:DialogHost.DialogContent>
                <!-- START: Fields to add new deliveries -->
                <Grid Margin="30, 15">
                    
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- START: Left Column Content -->
                    <StackPanel VerticalAlignment="Top" HorizontalAlignment="Stretch" Grid.Column="0" Orientation="Vertical" Margin="10">
                        
                        <!-- Customer Name Field -->
                        <ComboBox x:Name="ComboboxClient" materialDesign:HintAssist.Hint="Cliente" materialDesign:TextFieldAssist.HasClearButton="True" Style="{StaticResource MaterialDesignOutlinedComboBox}"
                                  ItemsSource="{Binding Clients}" DisplayMemberPath="Name" SelectedValuePath="Name"
                                  SelectedValue="{Binding CurrentDelivery.CustomerName, UpdateSourceTrigger=PropertyChanged}" 
                                  IsEditable="True" HorizontalContentAlignment="Left" Width="200" Margin="10, 15"/>

                        <!-- Phone Number Field -->
                        <TextBox x:Name="TextBoxPhoneNumber" materialDesign:HintAssist.Hint="Teléfono" materialDesign:TextFieldAssist.HasClearButton="True" 
                                 Style="{StaticResource MaterialDesignOutlinedTextBox}" HorizontalContentAlignment="Left" 
                                 Width="200" Margin="10, 15">
                            <TextBox.Text>
                                <Binding Path="CurrentDelivery.PhoneNumber" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                    <Binding.ValidationRules>
                                        <validations:PhoneNumberValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <!-- Address Field -->
                        <TextBox x:Name="TextBoxAddress" materialDesign:HintAssist.Hint="Dirección" 
                                 materialDesign:TextFieldAssist.HasClearButton="True" Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                 HorizontalContentAlignment="Left" Width="200" Margin="10, 15">
                            <TextBox.Text>
                                <Binding Path="CurrentDelivery.Address" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                    <Binding.ValidationRules>
                                        <validations:AddressValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        
                    </StackPanel>
                    <!-- END: Left Column Content -->


                    <!-- START: Right Column Content -->
                    <StackPanel VerticalAlignment="Top" HorizontalAlignment="Stretch" Grid.Column="1" Orientation="Vertical" Margin="10">
                        
                        <!-- Description Field -->
                        <ComboBox materialDesign:HintAssist.Hint="Descripción" materialDesign:TextFieldAssist.HasClearButton="True"
                                  Style="{StaticResource MaterialDesignOutlinedComboBox}" ItemsSource="{Binding DeliveryTypes}"
                                  Text="{Binding CurrentDelivery.Description}" IsEditable="True"
                                  HorizontalContentAlignment="Left" Width="200" Margin="10, 15"/>

                        <!-- Driver Field -->
                        <ComboBox x:Name="ComboboxDriver" materialDesign:HintAssist.Hint="Mensajero" materialDesign:TextFieldAssist.HasClearButton="True" 
                                  Style="{StaticResource MaterialDesignOutlinedComboBox}" IsTextSearchEnabled="True" 
                                  ItemsSource="{Binding Drivers}" DisplayMemberPath="FullName"
                                  Margin="10, 15" HorizontalContentAlignment="Left" Width="200">
                            <ComboBox.SelectedItem>
                                <Binding Path="CurrentDelivery.Driver" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                    <Binding.ValidationRules>
                                        <validations:DriverValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.SelectedItem>
                        </ComboBox>
                        
                    </StackPanel>
                    <!-- END: Right Column Content -->


                    <!-- START: Dialog Control Buttons -->
                    <StackPanel Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Center" Orientation="Horizontal" Margin="20">

                        <!-- Accept button Dialog -->
                        <Button Margin="0,8,8,0" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                        Content="Aceptar" IsDefault="True">
                            
                            <Button.CommandParameter>
                                <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">True</system:Boolean>
                            </Button.CommandParameter>

                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                    
                                    <Style.Triggers>
                                        <!-- Disable button if TextBoxAddress is empty -->
                                        <DataTrigger Binding="{Binding Text, ElementName=TextBoxAddress}" Value="">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>

                                        <!-- Disable button if TextBoxPhoneNumber is empty -->
                                        <DataTrigger Binding="{Binding Text, ElementName=TextBoxPhoneNumber}" Value="">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>

                                        <!-- Disable button if ComboBoxDriver has no selected item -->
                                        <DataTrigger Binding="{Binding SelectedItem, ElementName=ComboboxDriver}" Value="{x:Null}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>

                                        <!-- Disable button if there are validation errors -->
                                        <DataTrigger Binding="{Binding (Validation.HasError), ElementName=TextBoxAddress}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding (Validation.HasError), ElementName=TextBoxPhoneNumber}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding (Validation.HasError), ElementName=ComboboxDriver}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                    
                                </Style>
                            </Button.Style>
                        </Button>

                        <!-- Cancel button Dialog -->
                        <Button Margin="0,10,10,0" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                        Content="Cancelar" IsCancel="True" Style="{StaticResource MaterialDesignFlatButton}">
                            <Button.CommandParameter>
                                <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">False</system:Boolean>
                            </Button.CommandParameter>
                        </Button>
                        
                    </StackPanel>
                    <!-- END: Dialog Control Buttons -->
                    
                </Grid>
                <!-- END: Fields to add new deliveries -->
                
            </materialDesign:DialogHost.DialogContent>

            <!--START: Filtered search deliveries table -->
            <Grid Height="45" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="20,50,20,0">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250" />
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <TextBox x:Name="SearchDeliveryTextBox" materialDesign:HintAssist.Hint="Buscar..." 
                         Style="{StaticResource MaterialDesignOutlinedTextBox}" 
                         VerticalAlignment="Stretch" Width="250" HorizontalAlignment="Left" Padding="10,10,10,10" 
                         materialDesign:TextFieldAssist.TextFieldCornerRadius="10" Text="{Binding SearchFilter}"/>

                <Button Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" 
                        VerticalAlignment="Center" HorizontalAlignment="Right" Width="40" Height="40" Margin="10"
                        Command="{Binding SearchFilteredDeliveriesCommand}">
                    <materialDesign:PackIcon Kind="Magnify"/>
                    
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                            <Style.Triggers>
                                <!-- Disable button if SearchTextBox is empty -->
                                <DataTrigger Binding="{Binding Text, ElementName=SearchDeliveryTextBox}" Value="">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    
                </Button>

                <Button Style="{StaticResource MaterialDesignIconButton}" Content="{materialDesign:PackIcon Autorenew}"
                        Grid.Column="1" HorizontalAlignment="Left" ToolTip="Ver todos los domicilios" ToolTipService.InitialShowDelay="500"
                        Opacity="0.5" materialDesign:ButtonAssist.CornerRadius="5" Margin="10, 0" Width="30"
                        Visibility="{Binding IsFiltering, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding SearchAllDeliveriesCommand}">
                </Button>

                <Button Style="{StaticResource MaterialDesignRaisedButton}" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" 
                        Grid.Column="1" HorizontalAlignment="Right" Width="120" materialDesign:ButtonAssist.CornerRadius="5">

                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Plus" Width="20" Height="20" Margin="0,0,5,0"/>
                        <TextBlock Text="Agregar" VerticalAlignment="Center" Margin="0,0,5,0" />
                    </StackPanel>
                </Button>

                <Button Style="{StaticResource MaterialDesignPaperButton}" Content="{materialDesign:PackIcon FilterVariant}"
                        Grid.Column="1" HorizontalAlignment="Right" Width="50" ToolTip="Filtros" 
                        materialDesign:ButtonAssist.CornerRadius="5" Margin="125, 0">
                </Button>

            </Grid>
            <!--END: Filtered search deliveries table -->
                
        </materialDesign:DialogHost>
        <!-- END: Dialog Host to add new delivery -->

        <!-- START: List of Deliveries -->
        <DataGrid x:Name="DeliveriesDataGrid" CanUserSortColumns="False"
                  AutoGenerateColumns="False" IsReadOnly="True" SelectionMode="Single"
                  EnableRowVirtualization="True"
                  EnableColumnVirtualization="True"
                  ItemsSource="{Binding Deliveries}"
                  RowHeight="50" Margin="5,130,5,80" 
                  FontSize="15" Opacity="0.9"
                  CanUserDeleteRows="False" CanUserAddRows="False"
                  AlternationCount="2"
                  RowStyle="{StaticResource MaterialDesignDataGridRow}"
                  AlternatingRowBackground="{StaticResource MaterialDesignLightSeparatorBackground}"
                  Style="{StaticResource MaterialDesignDataGrid}"
                  MouseDoubleClick="DataGrid_MouseDoubleClick">

            <!-- START: Deliveries Data Grid Columns -->
            <DataGrid.Columns>
                
                <!-- Selection Column -->
                <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.Header>
                        <Border Background="Transparent">
                            <CheckBox IsChecked="{Binding DataContext.IsAllDeliveriesSelected, 
                                RelativeSource={RelativeSource AncestorType=Page}, Mode=TwoWay, 
                                UpdateSourceTrigger=PropertyChanged}"/>
                        </Border>
                    </DataGridCheckBoxColumn.Header>
                    <DataGridCheckBoxColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.HeaderStyle>
                </DataGridCheckBoxColumn>

                <!-- Date Created Column -->
                <DataGridTextColumn Header="Fecha" Binding="{Binding DateCreated}"
                                    Width="*" IsReadOnly="True" >
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <materialDesign:PackIcon Kind="Calendar" />
                                <TextBlock Text="Fecha" Margin="5,0,0,0" FontWeight="Light"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>

                <!-- Customer Name Column -->
                <DataGridTextColumn Binding="{Binding CustomerName, 
                                    UpdateSourceTrigger=PropertyChanged}" Width="*">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <materialDesign:PackIcon Kind="Account"/>
                                <TextBlock Text="Cliente" Margin="5,0,0,0" FontWeight="Light"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>

                <!-- Phone Number Column -->
                <DataGridTextColumn Header="Teléfono" Width="*">
                    <DataGridTextColumn.Binding>
                        <Binding Path="PhoneNumber" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validations:PhoneNumberValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <materialDesign:PackIcon Kind="Phone"/>
                                <TextBlock Text="Teléfono" Margin="5,0,0,0" FontWeight="Light"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>

                <!-- Address Column -->
                <DataGridTextColumn Header="Dirección"  Width="*">
                    <DataGridTextColumn.Binding>
                        <Binding Path="Address" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validations:AddressValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <materialDesign:PackIcon Kind="MapMarker"/>
                                <TextBlock Text="Dirección" Margin="5,0,0,0" FontWeight="Light"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>

                <!-- Description Column -->
                <DataGridTemplateColumn Header="Descripción" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Description}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding DataContext.DeliveryTypes, 
                                      RelativeSource={RelativeSource AncestorType=Page}}"
                                      SelectedItem="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="True" IsTextSearchEnabled="True"
                                      Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <materialDesign:PackIcon Kind="Information"/>
                                <TextBlock Text="Descripción" Margin="5,0,0,0" FontWeight="Light"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                </DataGridTemplateColumn>

                <!-- Driver Column -->
                <DataGridTemplateColumn Header="Mensajero" Width="*" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Driver.FullName}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox  ItemsSource="{Binding DataContext.Drivers, RelativeSource={RelativeSource AncestorType=Page}}"
                                       DisplayMemberPath="FullName"
                                       SelectedItem="{Binding Driver, UpdateSourceTrigger=PropertyChanged}"
                                       IsTextSearchEnabled="True"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <materialDesign:PackIcon Kind="Moped" />
                                <TextBlock Text="Mensajero" Margin="5,0,0,0" FontWeight="Light"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                </DataGridTemplateColumn>

                <!-- Status Column -->
                <DataGridTemplateColumn Header="Estado" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" 
                                          IsChecked="{Binding Status, UpdateSourceTrigger=PropertyChanged}"
                                          IsHitTestVisible="False" HorizontalAlignment="Left">
                                <materialDesign:PackIcon Kind="ProgressClock" RenderTransformOrigin=".5,.5">
                                    <materialDesign:PackIcon.RenderTransform>
                                        <RotateTransform Angle="45" />
                                    </materialDesign:PackIcon.RenderTransform>
                                </materialDesign:PackIcon>
                                <materialDesign:ToggleButtonAssist.OnContent>
                                    <materialDesign:PackIcon Kind="PackageVariantClosedCheck" />
                                </materialDesign:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" 
                                          IsChecked="{Binding Status, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left">
                                <materialDesign:PackIcon Kind="ProgressClock" RenderTransformOrigin=".5,.5">
                                    <materialDesign:PackIcon.RenderTransform>
                                        <RotateTransform Angle="45" />
                                    </materialDesign:PackIcon.RenderTransform>
                                </materialDesign:PackIcon>
                                <materialDesign:ToggleButtonAssist.OnContent>
                                    <materialDesign:PackIcon Kind="PackageVariantClosedCheck" />
                                </materialDesign:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <materialDesign:PackIcon Kind="PackageVariantClosed" />
                                <TextBlock Text="Estado" Margin="5,0,0,0" FontWeight="Light"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <!-- END: Deliveries Data Grid Columns -->
            
        </DataGrid>

        <!-- END: List of Deliveries -->

        <!-- START: Paging Buttons -->
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,20">
            <!-- Previous Page Button -->
            <Button materialDesign:ElevationAssist.Elevation="Dp2"
                    Style="{StaticResource MaterialDesignIconButton}"
                    Command="{Binding PreviousPageCommand}"
                    IsEnabled="{Binding CanNavigatePrevious}"
                    Margin="5">
                <materialDesign:PackIcon Kind="ArrowLeft" Width="20" Height="20"/>
            </Button>

            <!-- Page Information -->
            <TextBlock Text="{Binding CurrentPage, StringFormat='Pag {0} de'}"
               VerticalAlignment="Center"
               Margin="20,0,0,0"/>
            <TextBlock Text="{Binding TotalPages}"
               VerticalAlignment="Center"
               Margin="5,0,20,0"/>

            <!-- Next Page Button -->
            <Button materialDesign:ElevationAssist.Elevation="Dp2"
                    Style="{StaticResource MaterialDesignIconButton}"
                    Command="{Binding NextPageCommand}"
                    IsEnabled="{Binding CanNavigateNext}"
                    Margin="5">
                <materialDesign:PackIcon Kind="ArrowRight" Width="20" Height="20"/>
            </Button>
        </StackPanel>
        <!-- END: Paging Buttons -->

        <!-- START: Delete deliveries button -->
        <Button Style="{StaticResource MaterialDesignFloatingActionButton}" ToolTip="Eliminar entregas seleccionadas"
                ToolTipService.Placement="Left"
                Margin="20, 15" materialDesign:ElevationAssist.Elevation="Dp4" Command="{Binding DeleteSelectedDeliveriesCommand}"
                HorizontalAlignment="Right" VerticalAlignment="Bottom" IsEnabled="{Binding IsAnyDeliverySelected}">
            <materialDesign:PackIcon Kind="Delete" Width="30" Height="30"/>
        </Button>
        <!-- END: Delete deliveries button -->
    </Grid>

    <!-- START: Behaviors -->
    <behaviors:Interaction.Triggers>
        <!-- Behavior Editing Deliveries Data Grid -->
        <behaviors:EventTrigger EventName="RowEditEnding" x:Name="DeliveriesDataGridEndingEdit" SourceName="DeliveriesDataGrid">
            <behaviors:InvokeCommandAction Command="{Binding UpdateDeliveryCommand}" PassEventArgsToCommand="True"/>
        </behaviors:EventTrigger>

        <!-- Behavior Selecting client from Combobox -->
        <behaviors:EventTrigger EventName="LostFocus" x:Name="LostFocusClientCombobox" SourceName="ComboboxClient">
            <behaviors:InvokeCommandAction Command="{Binding SelectClientCommand}"/>
        </behaviors:EventTrigger>

    </behaviors:Interaction.Triggers>
    <!-- END: Behaviors -->

</Page>
